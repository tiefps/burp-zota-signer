name: Build

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      jar-name: ${{ steps.jar-info.outputs.jar-name }}
      version: ${{ steps.jar-info.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Determine project version
        id: project_version
        run: |
          VERSION=$(./gradlew -q properties --console=plain | grep '^version:' | awk '{print $2}')
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Build shadow jar
        run: ./gradlew clean shadowJar

      - name: Get jar info
        id: jar-info
        run: |
          JAR_PATH=$(find build/libs -name "*.jar" -type f | head -1)
          JAR_NAME=$(basename "$JAR_PATH")
          VERSION=$(grep "^version = " build.gradle | sed "s/version = '\(.*\)'/\1/")
          echo "jar-name=$JAR_NAME" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Found JAR: $JAR_NAME (version: $VERSION)"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: zota-signer-${{ steps.project_version.outputs.version }}
          path: build/libs/*.jar

  release:
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Download built artifact
        uses: actions/download-artifact@v4
        with:
          name: zota-signer-${{ needs.build.outputs.version }}
          path: build/libs/

      - name: Determine release info
        id: release-info
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            # Tagged release
            TAG=${GITHUB_REF#refs/tags/}
            echo "tag=$TAG" >> $GITHUB_OUTPUT
            echo "name=Release $TAG" >> $GITHUB_OUTPUT
            echo "prerelease=false" >> $GITHUB_OUTPUT
            echo "auto-tag=false" >> $GITHUB_OUTPUT
          else
            # Main branch - create automatic tag
            TAG="v${{ needs.build.outputs.version }}"
            echo "tag=$TAG" >> $GITHUB_OUTPUT
            echo "name=Release $TAG" >> $GITHUB_OUTPUT
            echo "prerelease=false" >> $GITHUB_OUTPUT
            echo "auto-tag=true" >> $GITHUB_OUTPUT
          fi

      - name: Check if tag exists (for main branch)
        if: steps.release-info.outputs.auto-tag == 'true'
        id: tag-check
        run: |
          TAG="${{ steps.release-info.outputs.tag }}"
          if git ls-remote --tags origin | grep -q "refs/tags/$TAG$"; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Tag $TAG already exists, skipping release"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Tag $TAG does not exist, proceeding with release"
          fi

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/') || (github.ref == 'refs/heads/main' && steps.tag-check.outputs.exists == 'false')
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.release-info.outputs.tag }}
          name: ${{ steps.release-info.outputs.name }}
          prerelease: ${{ steps.release-info.outputs.prerelease }}
          generate_release_notes: true
          files: build/libs/${{ needs.build.outputs.jar-name }}
          body: |
            Burp Suite extension for automatically signing Zota API requests.
            
            ## Installation
            1. Download the JAR file from the assets below
            2. Open Burp Suite
            3. Go to **Extender → Extensions → Add**
            4. Load the downloaded JAR file
            
            ## Version
            This release contains version ${{ needs.build.outputs.version }} of the Zota Signer extension.

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Submit dependency graph
        uses: gradle/actions/dependency-submission@v4
